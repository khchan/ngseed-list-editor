angular.module("nglist-templates",["partials/ListEditor.html"]),angular.module("partials/ListEditor.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("partials/ListEditor.html",'<div class=table-responsive><table ng-table=tableParams class="table table-hover"><thead><tr><th ng-repeat="column in columns" class="sortable text-left" ng-class="{selectEdit: column.$edit && canEditItem,\n						\'sort-asc\': isSortBy(column.field, \'asc\'),\n						\'sort-desc\': isSortBy(column.field, \'desc\')}" ng-click=sortTable(column)><button ng-hide="editCol || editRow || canEditItem || canDelCol" type=button class="pull-left close" ng-if=canEdit ng-click=removeColumn($index)><span aria-hidden=true>&times;</span>&nbsp;</button> <span class=pull-left ng-if=!column.$edit>{{column.title}}</span><div ng-if=column.$edit><input class=form-control ng-model=column.title ng-disabled="canEditHeader"></div><div ng-hide="editCol || editRow || canEditItem" class=pull-right><button type=button class="pull-left btn btn-default btn-xs" ng-if=canEdit ng-click=selectColumnEdit(column)><span class="glyphicon glyphicon-pencil"></span></button></div></th><th ng-if="!editCol && canEdit" ng-show={{canAddNewcol}} width=45><button class="btn btn-default btn-sm" ng-if=!editCol ng-disabled="editRow || canEditItem" ng-click=editNewColumn()><span class="glyphicon glyphicon-plus"></span></button></th><th ng-if="editCol && canEdit" class=selectEdit><input placeholder="New Column Title" class=form-control ng-model="columnBuffer.title"></th><th ng-if=canEdit>Actions</th></tr><tr ng-if=showEditCol><th ng-repeat="column in columns"><div ng-if="showEditCol && !column.$edit && canEdit" ng-hide="editCol || editRow || canEditItem" class=btn-group><button class="btn btn-default btn-xs" ng-if=canEdit ng-click=selectColumnEdit(column)><span class="glyphicon glyphicon-pencil"></span></button> <button class="btn btn-danger btn-xs" ng-if=canEdit ng-click=removeColumn($index)><span class="glyphicon glyphicon-remove"></span></button></div></th></tr></thead><tbody><tr ng-repeat="item in $data | filter:search:strict" ng-class="{selectEdit: item.$edit && canEditItem}"><td ng-repeat="column in columns" ng-class="{selectEdit: column.$edit && canEditItem}"><span ng-if="!item.$edit && !column.$edit">{{item[column.field]}}</span><div ng-if=item.$edit><input class=form-control type={{column.type}} placeholder={{item[column.field]}} ng-model="item[column.field]"></div><div ng-if=column.$edit data-ng-switch on=column.type><div data-ng-switch-when=text><input class=form-control ng-model="item[column.field]"></div><div data-ng-switch-when=number><input type=number class=form-control ng-model="item[column.field]"></div></div></td><td ng-if="!editCol && canEdit" ng-show={{canAddNewcol}} width=45></td><td ng-if="editCol && canEdit" ng-show={{canAddNewcol}} class=selectEdit><div data-ng-switch on=columnBuffer.type><div data-ng-switch-when=text><input class=form-control ng-model="columnBuffer.data[$index]"></div><div data-ng-switch-when=number><input type=number class=form-control ng-model="columnBuffer.data[$index]"></div></div></td><td width=90 ng-if=canEdit><div class=btn-group ng-if=!item.$edit><button id=selectRowEditID_{{$index}} class="btn btn-default btn-sm" ng-disabled="editCol || editRow || canEditItem" ng-click=selectRowEdit(item)><span class="glyphicon glyphicon-pencil"></span></button> <button id=removeRowID_{{$index}} class="btn btn-danger btn-sm" ng-disabled="editCol || editRow || canEditItem" ng-click=removeRow(item)><span class="glyphicon glyphicon-trash"></span></button></div><div class=btn-group ng-if=item.$edit><button id=toggleEditID_{{$index}} class="btn btn-primary btn-sm" ng-click=toggleEdit(item)><span class="glyphicon glyphicon-ok"></span></button> <button id=cancelRowEditID_{{$index}} class="btn btn-warning btn-sm" ng-click=cancelRowEdit(item)><span class="glyphicon glyphicon-remove"></span></button></div></td></tr></tbody><tfoot ng-if=canEdit><tr><td data-title=column.title ng-repeat="column in columns" ng-class="{selectEdit: column.$edit && canEditItem}"><input ng-if=editRow class=form-control ng-disabled="editCol || canEditItem" placeholder="New {{column.field}}" type={{column.type}} ng-model="rowBuffer[column.field]"><div ng-if=column.$edit><button class="btn btn-primary btn-sm" ng-click=toggleEdit(column)><span class="glyphicon glyphicon-ok"></span></button> <button class="btn btn-warning btn-sm" ng-click=cancelColEdit(column)><span class="glyphicon glyphicon-remove"></span></button></div></td><td ng-show={{canAddNewcol}} ng-class="{\'selectEdit\': editCol}"><div ng-if=editCol><input class=form-control placeholder="New field key" ng-model="columnBuffer.field"><select class=form-control ng-model=columnBuffer.type ng-change="columnBuffer.data = {}"><option value=text>Textfield</option><option value=number>Number</option></select><br><button class="btn btn-primary btn-sm" ng-disabled=!canAddCol ng-click=addColumn()><span class="glyphicon glyphicon-ok"></span></button> <button class="btn btn-warning btn-sm" ng-click=reset(true)><span class="glyphicon glyphicon-remove"></span></button></div></td><td ng-show={{canAddNewrow}} width=90><div class=btn-group><button ng-if=!editRow class="btn btn-primary btn-sm" ng-disabled="editCol || canEditItem" ng-click=editNewRow()><span class="glyphicon glyphicon-plus"></span></button> <button ng-if=editRow class="btn btn-primary btn-sm" ng-disabled="editCol || !canAddRow" ng-click=addRow()><span class="glyphicon glyphicon-ok"></span></button> <button ng-if=editRow class="btn btn-warning btn-sm" ng-disabled=editCol ng-click=reset(true)><span class="glyphicon glyphicon-remove"></span></button></div></td></tr></tfoot></table></div>')}]),function(){"use strict";angular.module("nglist-editor",["ui.bootstrap","nglist-templates","ngTable"]).directive("listEditor",function($timeout){return{restrict:"E",replace:!0,scope:{canEdit:"@",canAddNewcol:"@",canAddNewrow:"@",canEditHeader:"@",canDelRow:"@",canDelCol:"@",list:"=",columns:"="},templateUrl:"partials/ListEditor.html",controller:"ListController",link:{pre:function(scope,element,attr){var unregister=scope.$watch("list",function(newval,oldval){newval.length>0&&(scope.affixMissingColumns(scope.list,scope.columns),unregister())},!0)},post:function(scope,element,attr){scope.$watch("dataReady",function(newVal){newVal&&scope.list.length>=0&&scope.generateTable(scope.list)}),$timeout(function(){scope.$watchCollection("list",function(newVal){scope.tableParams&&scope.dataReady&&newVal&&scope.tableParams.reload()})},2e3),scope.$watchCollection("search",function(newVal){scope.tableParams&&scope.dataReady&&newVal&&scope.tableParams.reload()}),scope.$watchCollection("itemBuffer",function(newVal){scope.canEditItem=0!==_.values(newVal).length}),scope.$watchCollection("rowBuffer",function(newVal){scope.canAddRow=_.compact(_.values(newVal)).length==scope.columns.length}),scope.$watchCollection("columnBuffer",function(newVal){var filledCols=4==_.compact(_.values(newVal)).length,isUniqueCol=_.indexOf(_.pluck(scope.columns,"field"),newVal.field)<0;scope.canAddCol=filledCols&&isUniqueCol})}}}}).controller("ListController",function($scope,$filter,$timeout,ngTableParams){$scope.canEdit=$scope.canEdit||!1,$scope.canAddNewcol=$scope.canAddNewcol||!1,$scope.canAddNewrow=$scope.canAddNewrow||!1,$scope.canEditHeader=$scope.canEditHeader||!1,$scope.canDelRow=$scope.canDelRow||!1,$scope.canDelCol=$scope.canDelCol||!1,$scope.editRow=!1,$scope.editCol=!1,$scope.editItem=!1,$scope.canAddRow=!1,$scope.canAddCol=!1,$scope.rowBuffer={},$scope.columnBuffer={},$scope.itemBuffer={},$scope.dataReady=!1,$scope.affixMissingColumns=function(listInput,colInput){var missingCols=[];_.chain(_.union(_.flatten(_.map(listInput,_.keys)))).difference(_.pluck(colInput,"field")).map(function(m){missingCols.push({field:m,type:_.every(_.compact(_.pluck(listInput,m)),_.isNumber)?"number":"text"})}),_.each(missingCols,function(item){colInput.push({title:item.field.charAt(0).toUpperCase()+item.field.substring(1),field:item.field,type:item.type})}),_.map(listInput,function(item){return _.each(missingCols,function(m){_.has(item,m.field)||(item[m.field]="")}),item}),$scope.dataReady=!0},$scope.selectRowEdit=function(item){$scope.toggleEdit(item),$scope.editItem=!0,angular.copy(item,$scope.itemBuffer)},$scope.cancelRowEdit=function(item){var idx=$scope.list.indexOf(item);angular.copy($scope.itemBuffer,$scope.list[idx]),$scope.toggleEdit(item)},$scope.removeRow=function(item){var idx=$scope.list.indexOf(item);$scope.list.splice(idx,1),$scope.tableParams.reload()},$scope.editNewRow=function(){$scope.rowBuffer={},$scope.editRow=!0},$scope.addRow=function(){$scope.list.push($scope.rowBuffer),$scope.tableParams.reload(),$scope.rowBuffer={},$scope.editRow=!1},$scope.selectColumnEdit=function(column){var colData=_.pluck($scope.list,column.field);$scope.toggleEdit(column),$scope.itemBuffer.title=column.title,$scope.itemBuffer.data=colData},$scope.cancelColEdit=function(column){var idx=$scope.columns.indexOf(column);$scope.columns[idx].title=$scope.itemBuffer.title,_.map($scope.list,function(row,i){row[column.field]=$scope.itemBuffer.data[i]}),$scope.toggleEdit(column)},$scope.removeColumn=function(index){confirm("Are you sure you want to delete column: "+$scope.columns[index].field+"?")&&(_.each($scope.list,function(row){angular.copy(_.omit(row,$scope.columns[index].field),row)}),$scope.columns.splice(index,1),$scope.tableParams.reload())},$scope.editNewColumn=function(){$scope.editCol=!0,$scope.canAddRow=!1,$scope.columnBuffer.data={},$scope.columnBuffer.type="text"},$scope.addColumn=function(){var newCol={};newCol.title=$scope.columnBuffer.title,newCol.field=$scope.columnBuffer.field,newCol.type=$scope.columnBuffer.type,$scope.columns.push(newCol),_.each(_.keys($scope.columnBuffer.data),function(k){$scope.list[k][newCol.field]=$scope.columnBuffer.data[k]}),_.each($scope.list,function(row){void 0===row[newCol.field]&&(row[newCol.field]="")}),$scope.tableParams.reload(),$scope.columnBuffer={},$scope.editCol=!1},$scope.toggleEdit=function(item){$scope.itemBuffer={},item.$edit=!item.$edit},$scope.reset=function(close){$scope.itemBuffer={},$scope.rowBuffer={},$scope.columnBuffer={},close&&($scope.editCol=!1,$scope.editRow=!1,_.each($scope.columns,function(c){c.$edit=!1}))},$scope.generateTable=function(list){var getFOData=function(data,params){var filteredData=$scope.search?$filter("filter")(data,$scope.search):data,orderedData=filteredData;return params.orderBy().length>0&&(orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):data),orderedData};$scope.tableParams=new ngTableParams({page:1,count:10},{counts:[],total:list.length,getData:function($defer,params){var FOData=getFOData(list,params);params.total(FOData.length),$defer.resolve(FOData.slice((params.page()-1)*params.count(),params.page()*params.count()))},$scope:{$data:{}}}),$scope.isSortBy=function(column,order){return $scope.tableParams.isSortBy(column,order)},$scope.sortTable=function(column){var sortParam={};column.$edit||(sortParam[column.field]=$scope.tableParams.isSortBy(column.field,"asc")?"desc":"asc",$scope.tableParams.sorting(sortParam))}}})}();